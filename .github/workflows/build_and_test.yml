name: Build and Test
run-name: Build and Test on ${{ github.sha }}

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  Build-and-Test-on-Linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro:
        - ubuntu
        - fedora
        - arch
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref || github.ref_name }}
        repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
    - name: Build
      run: docker build -t clipshare -f "docker/Dockerfile.${{matrix.distro}}" .
    - name: Test
      run: docker run clipshare

  Build-and-Test-on-Windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: false
        install: mingw-w64-x86_64-gcc mingw-w64-x86_64-make mingw-w64-x86_64-openssl mingw-w64-x86_64-libpng mingw-w64-x86_64-libunistring findutils diffutils openbsd-netcat mingw-w64-x86_64-python sed
    - name: Setup make
      run: ln -s /mingw64/bin/mingw32-make.exe /mingw64/bin/make.exe
    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref || github.ref_name }}
        repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
    - name: Build
      run: |
        make
        make web
    - name: Test
      run: make test

  Build-and-Test-on-macOS-x86_64:
    runs-on: macos-latest
    steps:
    - name: Install build dependencies
      run: brew install openssl@3 libpng libunistring
    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref || github.ref_name }}
        repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
    - name: Build
      run: make
    - name: Install test dependencies
      run: |
        brew install coreutils gnu-sed
        echo "$(brew --prefix coreutils)"'/libexec/gnubin' >> $GITHUB_PATH
        echo "$(brew --prefix gnu-sed)"'/libexec/gnubin' >> $GITHUB_PATH
    - name: Test
      run: |
        export TERM=xterm-256color
        make test
