name: Build release
run-name: Build artefacts for ${{github.ref_name}}

on:
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:

  Linux:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Set version
      run: |
        version="$(echo '${{github.ref_name}}' | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')"
        echo ARCHIVE_NAME="clip_share_server-${version}-linux_x86_64.tar.gz" >> $GITHUB_ENV

    - name: Build on Ubuntu 20
      run: docker build -t clipshare:ubuntu20 -f docker/release/Dockerfile.ubuntu20 .

    - name: Build on Ubuntu 22
      run: docker build -t clipshare:ubuntu22 -f docker/release/Dockerfile.ubuntu22 .

    - name: Build on Arch Linux
      run: docker build -t clipshare:arch -f docker/release/Dockerfile.arch .

    - name: Build on Fedora 39
      run: docker build -t clipshare:fedora -f docker/release/Dockerfile.fedora .

    - name: Copy binaries
      run: |
        mkdir dist
        chmod 777 dist
        docker run -v './dist:/home/user/src/dist' clipshare:ubuntu20
        docker run -v './dist:/home/user/src/dist' clipshare:ubuntu22
        docker run -v './dist:/home/user/src/dist' clipshare:arch
        docker run -v './dist:/home/user/src/dist' clipshare:fedora
        cd dist && sha256sum -b * >SHA2-256SUM && tar -cf - --sort=name --owner=root:0 --group=root:0 --no-same-owner . | gzip -9 >"../${{env.ARCHIVE_NAME}}"

    - name: Upload Linux version
      uses: actions/upload-artifact@v4
      with:
        name: "${{env.ARCHIVE_NAME}}"
        path: "${{env.ARCHIVE_NAME}}"

  Windows:
    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: false
        install: mingw-w64-x86_64-gcc mingw-w64-x86_64-make mingw-w64-x86_64-openssl mingw-w64-x86_64-libpng mingw-w64-x86_64-libunistring

    - name: Setup make
      run: ln -s /mingw64/bin/mingw32-make.exe /mingw64/bin/make.exe

    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Set version
      run: |
        version="$(echo '${{github.ref_name}}' | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')"
        filename="clip_share_server-${version}-windows64.exe"
        echo FILE_NAME="$filename" >> $GITHUB_ENV

    - name: Build
      run: |
        make
        mv "clip_share.exe" "${{env.FILE_NAME}}"

    - name: Upload Windows version
      uses: actions/upload-artifact@v4
      with:
        name: "${{env.FILE_NAME}}"
        path: "${{env.FILE_NAME}}"

  macOS-x86_64:
    runs-on: macos-latest

    steps:
    - name: Install dependencies
      run: |
        brew install openssl@3 libpng libunistring gnu-tar
        echo "$(brew --prefix gnu-tar)"'/libexec/gnubin' >> $GITHUB_PATH

    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Set version
      run: |
        version="$(echo '${{github.ref_name}}' | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')"
        filename="clip_share_server-${version}-macos_x86_64"
        echo FILE_NAME="$filename" >> $GITHUB_ENV
        echo ARCHIVE_NAME="${filename}.tar.gz" >> $GITHUB_ENV

    - name: Build
      run: |
        make
        mv "clip_share" "${{env.FILE_NAME}}"
        tar -cf - --owner=root:0 --group=root:0 --no-same-owner "${{env.FILE_NAME}}" | gzip -9 >"${{env.ARCHIVE_NAME}}"

    - name: Upload macOS Intel version
      uses: actions/upload-artifact@v4
      with:
        name: "${{env.ARCHIVE_NAME}}"
        path: "${{env.ARCHIVE_NAME}}"
